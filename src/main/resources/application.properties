server.port=8887
#github
github.client.id=f08ab0ddf1754b1b31de
github.client.secret=95b4abf6778eb40897e8805a8ae4b63751b1be12
github.redirect.uri=http://localhost:8887/callback

#Ucloud 公钥和私钥
ucloud.ufile.public-key=
ucloud.ufile.private-key=
#计算机的域名
ucloud.ufile.bucket-name=project
##地址
ucloud.ufile.region=cn-bj
##默认的
ucloud.ufile.proxy-suffix=ufileos.com
##过期时间 两年
ucloud.ufile.expires-duration=63072000

#database
spring.datasource.url=jdbc:h2:~/projects
spring.datasource.username=sa
spring.datasource.password=123
spring.datasource.driver-class-name=org.h2.Driver
#mysql相关更改配置文件 h2 迁移到mysql
#spring.datasource.url=jdbc:mysql://localhost:3306/projects 部署到云端将Ip地址替换localhost
#spring.datasource.username=root
#spring.datasource.password=project-1314_
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#mybatis
##指定sql映射文件位置，mapper下的所有.xml文件都是映射文件
mybatis.mapper-locations=classpath:mapper/*.xml
##不能更改为实体类的包路径，需要的时接口的包路径
mybatis.type-aliases-package=com.haili.project.projectfirst.mapper
##mybaits无法吧带有下划线的映射到对应的名字的驼峰变量 mybatis不会自动路由
mybatis.configuration.map-underscore-to-camel-case=true
##自动运行打印mysql执行语句
spring.jpa.show-sql=true

#flyway
## 是否启用flyway
spring.flyway.enabled=true
## 编码格式，默认UTF-8
spring.flyway.encoding=UTF-8
## 迁移sql脚本文件存放路径，默认db/migration
spring.flyway.locations=db/migration
## 迁移sql脚本文件名称的前缀，默认V
spring.flyway.sql-migration-prefix=V
## 迁移sql脚本文件名称的分隔符，默认2个下划线__
spring.flyway.sql-migration-separator=__
## 迁移sql脚本文件名称的后缀
spring.flyway.sql-migration-suffixes=.sql
## 迁移时是否进行校验，默认true
spring.flyway.validate-on-migrate=true
## 将schema_version表从数据库删除后抛出异常
## Caused by: org.flywaydb.core.api.FlywayException:
## Found non-empty schema(s) `nmg-crm` without metadata table!
## Use baseline() or set baselineOnMigrate to true to initialize the metadata table.
## 设置为true，当迁移发现数据库非空且存在没有元数据的表时，自动执行基准迁移，新建schema_version表
spring.flyway.baseline-on-migrate=true

#热部署
# 自动更新：spring.devtools.restart.exclude=static/**,public/**

#日志
logging.file.path=logs/logger.log
##级别
logging.level.root = info
##指定文件的输出日志  输出执行语句
#logging.level.com.haili.project.projectfirst.mapper = debug
##日志文件存储设置 线上标准
logging.file.max-size=100MB
##每天如果存储日志足够大，只有一个，则max-history表示的是保留15天的日志，后面时间更新会删除前面的日志 线上标准
logging.file.max-history=15

#配置文件传输
spring.servlet.multipart.enabled=true 
spring.servlet.multipart.file-size-threshold=0
#单个数据的大小
spring.servlet.multipart.maxFileSize=100MB
#总数据的大小
spring.servlet.multipart.maxRequestSize=100MB
